; until I figure out how the hell (chibi log) works, this will have to do...

(define (make-logger file)
  (let* ((logfd (open file (+ open/write open/append)))
         (logport (open-output-file-descriptor logfd))
         (level 3))
    (define (make-datestring)
      "dummydate")
    (define (log-error msg)
      (if (>= level 1)
          (show logport (make-datestring) " ERROR " msg nl)))
    (define (log-warning msg)
      (if (>= level 2)
          (show logport (make-datestring) " WARNING " msg nl)))
    (define (log-info msg)
      (if (>= level 3)
          (show logport (make-datestring) " INFO " msg nl)))
    (define (log-debug msg)
      (if (>= level 4)
          (show logport (make-datestring) " DEBUG " msg nl)))
    (define (log-level)
      level)
    (define (set-log-level! lvl)
      (set! level lvl))
    (define (log-close)
      (close-output-port logport)
      (set! logfd #f)
      (set! logport #f))

    (lambda (dispatch . o)
      (cond ((eq? dispatch 'error) (apply log-error o))
            ((eq? dispatch 'info) (apply log-info o))
            ((eq? dispatch 'warning) (apply log-warning o))
            ((eq? dispatch 'debug) (apply log-debug o))
            ((eq? dispatch 'level) (apply log-level o))
            ((eq? dispatch 'set-level!) (apply set-log-level! o))
            ((eq? dispatch 'close) (apply log-close o))
            (else #f)))))
